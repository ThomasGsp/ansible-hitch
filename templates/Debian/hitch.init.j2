#!/bin/sh
#
# Redis init script for Debian-based distros
#
#
### BEGIN INIT INFO
# Provides:          Hitch
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Should-Start:      $syslog $named
# Should-Stop:       $syslog $named
# Short-Description: Start and stop Hitch ()
# Description:       Redis key-value store
### END INIT INFO

# Source the Linux Standard Base functions
. /lib/lsb/init-functions

NAME=hitch
DAEMON={{ install_dir }}/bin/hitch
PIDFILE={{ pidfile }}
PIDFILE_DIR=$(dirname "${PIDFILE}")

HITCH_USER={{ user }}
CONF="/etc/hitch/hitch.conf"

if [ -r /etc/default/hitch ]; then
    . /etc/default/hitch
fi


case "$1" in
    start)
        if [ -f "$PIDFILE" ]; then
            status_of_proc -p "$PIDFILE" $DAEMON "$NAME process" && return 0
        fi

        if [ -n "$NOFILE_LIMIT" ]; then
            ulimit -n $NOFILE_LIMIT
        fi

        if [ ! -d "$PIDFILE_DIR" ]; then
            mkdir "$PIDFILE_DIR"
            chown ${HITCH_USER}:${HITCH_USER} "$PIDFILE_DIR"
            chmod 0755 "$PIDFILE_DIR"
        fi

        log_daemon_msg "Starting $NAME..."
        if start-stop-daemon --start -q --oknodo -p "$PIDFILE" -c $HITCH_USER --exec $DAEMON -- $CONF; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        ;;
    stop)
        if [ -f "$PIDFILE" ]; then
            PID=$(cat "$PIDFILE")
            log_daemon_msg "Stopping $NAME..."
            $CLIEXEC shutdown
            while [ -x /proc/${PID} ]; do
                log_daemon_msg "Waiting for Redis to shutdown ..."
                sleep 1
            done
            log_end_msg 0
        else
            log_daemon_msg "$NAME is not running"
            log_end_msg 0
        fi
        ;;
    status)
        status_of_proc -p "$PIDFILE" $DAEMON "$NAME" && exit 0 || exit $?
        ;;
    restart|force-reload)
        ${0} stop
        ${0} start
        ;;
    *)
        echo "Usage: /etc/init.d/$NAME {start|stop|status|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
